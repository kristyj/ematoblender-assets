plugins {
    id 'groovy'
}

sourceSets {
    blend
}

processBlendResources {
    from "src/blend/scripts"
}

/* ------------------------------------------------------------------------------------------------------------------ */
// Example tasks

// Example task illustrating creating a new blend file with in-task instructions
task rotateCube(type: BlenderExec) {
    dependsOn processBlendResources
    ext.destBlendFile = file("$sourceSets.blend.output.resourcesDir/cube_rot.blend")
    srcFile = file("$sourceSets.blend.output.resourcesDir/cube.blend")
    destFile = destBlendFile
    script = """|bpy.data.objects['Cube'].rotation_euler = ${[0.5] * 3}
                |bpy.ops.wm.save_as_mainfile(filepath='$destFile', compress=True)""".stripMargin()
}

// Example task illustrating a render using the input from another task with in-task instructions
task renderCube(type: BlenderExec) {
    dependsOn rotateCube
    srcFile = rotateCube.destBlendFile
    destFile = file("$buildDir/render.png")
    script = """|bpy.data.scenes['Scene'].render.filepath = '$destFile'
                |bpy.ops.render.render(write_still=True)""".stripMargin()
}

// Example task illustrating creating a new blend file using a script file
task moveCubeFromFile(type: BlenderExec) {
    dependsOn processBlendResources
    ext.destBlendFile = file("$sourceSets.blend.output.resourcesDir/example_moved.blend")
    srcFile = file("$sourceSets.blend.output.resourcesDir/cube.blend")
    destFile = destBlendFile
    scriptFile = file("$sourceSets.blend.output.resourcesDir/asset_manipulation_example.py")
}
/* ------------------------------------------------------------------------------------------------------------------ */

class BlenderExec extends DefaultTask {

    @InputFile
    @Optional
    File srcFile

    @Input
    @Optional
    String script

    @InputFile
    @Optional
    File scriptFile

    @OutputFile
    File destFile

    File createScriptFile(String contents) {
        def scriptFile = project.file("$temporaryDir/script.py")
        scriptFile.withWriter { script ->
            script.println "import bpy"
            contents.eachLine { line ->
                script.println line.replaceAll("\\\\","\\\\\\\\")
            }
            script.println "bpy.ops.wm.quit_blender()"
        }
        scriptFile
    }

    @TaskAction
    void run() {
        new ByteArrayOutputStream().withStream { out ->
            project.exec {
                // '--' argument causes Blender to ignore following arguments
                // therefore destFile can be used for saving from within script using index sys.argv.index('--')+1
                // -Y stops Blender from running startup scripts
                commandLine 'blender', srcFile, '-Y', '--background', '--python', scriptFile ?: createScriptFile(script), '--', destFile
                standardOutput = out
                errorOutput = out
            }
            logger.info out.toString()
        }
    }
}
